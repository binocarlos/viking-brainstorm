# the viking object configures the stack itself
viking:
  # the name of the stack is used for container names - teststack/website in this case
  name: teststack
  # the very first viking to sail West!
  comment: Ragnar Lothbrok

# containers are built from your source code and pushed to a private docker registry
# you can use local containers in FROM statements by using:
# FROM viking:<stackname>/<nodename>
containers:
  # the base container - the other nodes will extend from this
  base: |
    FROM quarry/monnode
    RUN cd /srv/app && npm install

# static websites dont consume memory - they are all routed to the generic HTTP server
static:
  help:
    document_root: help/www
    route:
      - "help.thetracktube.com"
      - "*.help.thetracktube.com"
      
# workers are processes that we are deploying
# each worker has an ideal 'scale' that is the minimum number of workers
workers:
  db:
    container: viking:teststack/base
    run: node db/index.js
    # static means there will be only one and it will be launched on the same server each time
    static: true
    # the ports to write to etcd
    expose:
      - 5000
    # using a volume automatically infers static
    volume:
      - /var/lib/testdata
  logic:
    container: viking:teststack/base
    run: node logic/index.js
    scale: 2
  website:
    container: viking:teststack/base
    run: node website/index.js
    scale: 2
    route:
      - "thetracktube.com"
      - "www.thetracktube.com"
      - "tracktube.local.digger.io"
      - "tracktube.lan.digger.io"

# services - these are persistent (like databases) and are not restarted on each push
# the connection data for services is written to etcd and to the environment of each container
services:
  mongo:
    # the service can be from any docker container
    container: quarry/mongo
    # services normally save data that we want in a volume
    volumes:
      - /data/db
    # ports exposed by services are published to etcd and are injected into the environment of workers
    expose:
      - 27017
  # you can run as many services as you want in a single stack
  redis:
    type: service
    container: quarry/redis
    volumes:
      - /data/db
    expose:
      - 6379