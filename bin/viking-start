#!/usr/bin/env node
var program = require('commander')
var Bootstrap = require('../lib/bootstrap')
var async = require('async')
var utils = require('component-consoler')

program
  //.usage('viking build [scripts] [styles] [files]')
  .usage('')
  .option('-s, --seed', 'generate a new etcd cluster token', true)
  .option('-e, --env [filepath]', 'a file containing the core env for booting (s3, do etc)')
  .option('-f, --filter [filter]', 'only start the named service (etcd, host)')
  .option('-t, --tail', 'tail the host logs')
 
program.parse(process.argv);

function writeToken(done){

  if(!program.seed){
    return done()
  }
  
  Bootstrap.writeToken(done)
}

function startEtcd(done){

  if(program.filter && program.filter!='etcd'){
    return done()
  }

  Bootstrap.startetcd(program, done)
}

function injectEnv(done){
  if(!program.env){
    return done()
  }
  
  Bootstrap.injectEnv({
    filepath:program.env
  }, done)
}

function startHost(done){

  if(program.filter && program.filter!='host'){
    return done()
  }
	
  Bootstrap.startHost(done)
}

function tailLogs(next){
  if(program.tail){
    Bootstrap.tailEtcd(function(){})
    Bootstrap.tailLogs(function(){})
  }
  

}

async.series([
	writeToken,
	startEtcd,
  injectEnv,
	startHost,
  tailLogs
], function(){
	process.exit();
})