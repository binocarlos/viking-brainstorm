#!/usr/bin/env node

var program = require('commander');

// usage

program
  .version(require('../package').version)
  .usage('<command> [options]')
  .option('-t, --tail', 'tail the output')

program.parse(process.argv);

var spawn = require('child_process').spawn;
var path = require('path');
var fs = require('fs');
var join = path.join;
var stat = fs.statSync;
var exists = fs.existsSync;
var resolve = path.resolve;

var args = process.argv.slice(3);
var cmd = program.args[0];
if (!cmd) program.help();

var bin = 'viking-' + cmd;
var local = join(__dirname, bin);

if (exists(local)) {
  bin = local;
} else {
  bin = process.env.PATH.split(':').reduce(function(binary, p) {
    p = resolve(p, bin);
    return exists(p) && stat(p).isFile() ? p : binary;
  }, bin);
}

if (!exists(bin)) {
  console.error('\n  %s(1) does not exist', bin);
  program.help();
}

var proc = spawn(bin, args, { stdio: 'inherit', customFds: [0, 1, 2] });

proc.on('close', function(code){
  process.exit(code);
});